apiVersion: v1
kind: Pod
metadata:
  name: apache-pod
  labels:
    app: apache
spec:
  containers:
  # Main Apache container
  - name: apache
    image: httpd:2.4
    ports:
    - containerPort: 80
   
  
  
  # Fluentd sidecar container
  - name: fluentd
    image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
    env:
    - name: FLUENT_ELASTICSEARCH_HOST
      value: "elasticsearch"
    - name: FLUENT_ELASTICSEARCH_PORT
      value: "9200"
    - name: FLUENT_ELASTICSEARCH_SCHEME
      value: "http"
    - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
      value: "false"
    - name: FLUENT_ELASTICSEARCH_INDEX_NAME
      value: "apache-logs"
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: HOSTNAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    volumeMounts:
    - name: fluentd-config
      mountPath: /fluentd/etc/fluent.conf
      subPath: fluent.conf
    # Mount container logs directory to read stdout/stderr
    - name: container-logs
      mountPath: /var/log/containers
      readOnly: true
    - name: pod-logs
      mountPath: /var/log/pods
      readOnly: true
  
  
  volumes:
  # Fluentd configuration
  - name: fluentd-config
    configMap:
      name: fluentd-config
      
  # Container logs from host (where kubelet writes container stdout/stderr)
  - name: container-logs
    hostPath:
      path: /var/log/containers
  - name: pod-logs
    hostPath:
      path: /var/log/pods
  
  
---
# ConfigMap for Fluentd configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
data:
  fluent.conf: |
    <system>
      log_level debug
    </system>

    # Read Apache container stdout/stderr logs from Kubernetes
    <source>
      @type tail
      path /var/log/containers/apache-pod_*_apache-*.log
      pos_file /var/log/fluentd-apache-container.log.pos
      tag kubernetes.apache
      <parse>
        @type regexp
        expression /^(?<time>[^ ]*) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$/
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%N%z
      </parse>
      read_from_head true
    </source>

    # Parse the actual Apache logs from the 'log' field
    <filter kubernetes.apache>
      @type parser
      key_name log
      reserve_data true
      <parse>
        @type multi_format
        <pattern>
          # Apache access log format
          format regexp
          expression /^(?<remote_addr>[^ ]*) (?<remote_user>[^ ]*) (?<auth_user>[^ ]*) \[(?<timestamp>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<status_code>[^ ]*) (?<body_bytes_sent>[^ ]*)(?: "(?<http_referer>[^\"]*)" "(?<http_user_agent>[^\"]*)")?/
          time_key timestamp
          time_format %d/%b/%Y:%H:%M:%S %z
        </pattern>
        <pattern>
          # Apache error log format (notice/warning messages)
          format regexp
          expression /^\[(?<timestamp>[^\]]*)\] \[(?<level>[^\]]*)\] (?<message>.*)/
          time_key timestamp
          time_format %a %b %d %H:%M:%S.%N %Y
        </pattern>
        <pattern>
          # Apache startup messages
          format regexp
          expression /^(?<message>AH\d+: .*)$/
        </pattern>
        <pattern>
          # Generic fallback for other logs
          format none
        </pattern>
      </parse>
    </filter>

    # Add metadata
    <filter kubernetes.apache>
      @type record_transformer
      <record>
        hostname "#{Socket.gethostname}"
        pod_name "#{ENV['HOSTNAME']}"
        namespace "#{ENV['POD_NAMESPACE'] || 'default'}"
        container_name apache
        log_type apache
        cluster_name k8s-cluster
        parsed_timestamp ${time}
      </record>
    </filter>

    # Optional: Keep console output for debugging
    <match kubernetes.apache>
      @type copy
      <store>
        @type stdout
      </store>
      <store>
        @type elasticsearch
        host elasticsearch
        port 9200
        scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME']}"
        ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY']}"
        index_name "#{ENV['FLUENT_ELASTICSEARCH_INDEX_NAME']}"
        type_name _doc
        logstash_format true
        logstash_prefix apache-logs
        logstash_dateformat %Y.%m.%d
        include_tag_key true
        tag_key @log_name
        flush_interval 1s
        <buffer>
          @type file
          path /var/log/fluentd-buffers/kubernetes.system.buffer
          flush_mode interval
          retry_type exponential_backoff
          flush_thread_count 2
          flush_interval 5s
          retry_forever
          retry_max_interval 30
          chunk_limit_size 2M
          queue_limit_length 8
          overflow_action block
        </buffer>
      </store>
    </match>
